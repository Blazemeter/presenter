## Secrets

- Secrets stored in customer's S3-compatible storage
- `(err.)keys(.apm*)` files
- [Codec](https://github.com/Blazemeter/private-cloud/tree/master/bzm_app/codec) encodes secret into hash (seeded by env var [ENCODE_HASH_SALT](https://github.com/Blazemeter/private-cloud/blob/a9596f6a9e5529e2e089d582c1abaae044b3d63e/bzm_app/config.py#L153))
- [Hooks](https://github.com/Blazemeter/private-cloud/tree/master/app/bzm_gateway_interceptor/hooks), [handlers](https://github.com/Blazemeter/private-cloud/tree/master/private_cloud/handler) decide what to encode/decode
- [Mapping](https://github.com/Blazemeter/private-cloud/blob/master/bzm_app/mapping.py#L259) instances wrap secret files
- When adding secrets **always** use context manager `with Mapping(...) as m:`
- Convenience method [merge](https://github.com/Blazemeter/private-cloud/blob/master/bzm_app/mapping.py#L230) allows to gather secrets from several keys files

Concurrency

- Local file [locking](https://github.com/Blazemeter/private-cloud/blob/master/bzm_app/mapping.py#L96) avoids losing secrets on single node
- When multi node issue unsolved, spread keys "namespaces" helps
